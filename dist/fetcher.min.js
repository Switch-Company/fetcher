/**
 * @switch-company/fetcher - Wrap the Fetch API with convenience methods.
 * @version v1.0.0
 * @link undefined
 * @license ISC
 **/
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.fetcher=e()}(this,function(){"use strict";var t={headers:{"X-Requested-With":"XMLHttpRequest"},options:{credentials:"same-origin"},timeout:3e4};function e(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return(n=Object.assign({},t.params,n)).headers||(n.headers={}),n.headers=Object.assign({},t.headers,n.headers),new Promise(function(o,r){var a=function(){r({status:599,statusText:"Network Connect Timeout Error"})},i=window.setTimeout(a,t.timeout);window.fetch(e,n).then(function(t){o(t)}).catch(a).then(function(){window.clearTimeout(i)})}).then(function(t){return function(t){var e=t.headers.get("content-type");if(e.includes("application/json"))return t.json().then(function(e){return t.ok?e:Promise.reject(e)});if(e.includes("multipart/form-data"))return t.formData().then(function(e){return t.ok?e:Promise.reject(e)});if(e.includes("application/octet-stream"))return t.blob().then(function(e){return t.ok?e:Promise.reject(e)});if(t.ok)return t.text();return Promise.reject({status:t.status,statusText:t.statusText})}(t)})}var n=window.encodeURIComponent;function o(t){return Object.keys(t).map(function(e){return Array.isArray(t[e])?t[e].map(function(t){return n(e)+"="+n(t)}).join("&"):n(e)+"="+n(t[e])}).join("&")}function r(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};(n.method="get",n.data)&&(t+=t.split["?"][1]?"&"+o(n.data):"?"+o(n.data),delete n.data);return e(t,n)}var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};function i(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],r=void 0,i=!0;return n.headers?Object.keys(n.headers).some(function(t){if("content-type"===t.toLowerCase())return r=n.headers[t].toLowerCase().split(";")[0],!0}):n.headers={},"multipart/form-data"!==r&&"application/octet-stream"!==r||(i=!1),i&&n.data&&("append"in n.data.__proto__||"type"in n.data.__proto__?(i=!1,n.data.type&&!r&&(n.headers["content-type"]=n.data.type)):r||"object"!==a(n.data)||(n.headers["content-type"]="application/json;charset=UTF-8")),(n=Object.assign({},{method:"post"},n)).data&&(n.body=i?JSON.stringify(n.data):n.data,delete n.data),e(t,n,o)}function s(t,e=!1){const n=new FormData(t),o={};for(let[t,r]of n)if(!(e&&"string"!=typeof r||"File"===r.constructor.name&&0===r.size))if(o[t]){if(Array.isArray(o[t])){o[t].push(r);continue}o[t]=[o[t],r]}else o[t]=r;return o}const u=window.encodeURIComponent;var c={toJSON:s,toQuery:function(t){const e=s(t,!0);return Object.keys(e).map(t=>Array.isArray(e[t])?e[t].map(e=>`${u(t)}=${u(e)}`).join("&"):`${u(t)}=${u(e[t])}`).join("&")},hasFile:function(t){return Array.from(t.elements).some(t=>"file"===t.type&&t.files.length>0)}};return{get:r,send:i,form:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=i;return e.method||(t.method=t.method),"get"===e.method&&(n=r),c.hasFile?(e.header||(e.header={}),e.header["Content-Type"]="multipart/form-data",e.data=new FormData(t)):e.data=c.toJSON(t),n(t.action,e)},config:t}});
